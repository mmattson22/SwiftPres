{
  "name": "Swift",
  "tagline": "",
  "body": "<html>\r\n\r\n  <body>\r\n    <center><h1> Swift </h1></center>\r\n    <center><h2> by Apple, and Michael Mattson </h2><br></center>\r\n    <hr>\r\n    <h2> What is Swift? </h2>\r\n    <ul>\r\n      <li>It's like C/Objective-C, but not pedantic and restrictive.</li>\r\n      <li>Created by Apple as the flagship language for iOS, OSX, tvOS, and watchOS development.</li>\r\n      <li>Is designed to minimize the work you have to do in debugging.</li>\r\n      <ul>\r\n        <li>Variable are initialized automatically before use.</li>\r\n        <li>Memory is managed automatically.</li>\r\n        <li>Nil values are managed through optionals.</li>\r\n      </ul>\r\n      <li>It also doesn't require Semicolons!</li>\r\n    </ul>\r\n    <hr>\r\n    <h2> Objective C vs Swift </h2>\r\n    Here is how we declare a function in Swift:<br>\r\n    <code>func someFunction(s:String, i: Int) -> Bool <br>\r\n{<br>\r\n    ...  <br>\r\n}</code><br>\r\n   As opposed to one in Objective C:<br>\r\n   <code>int getRandomInteger(int minimum, int maximum) {<br>\r\n    return arc4random_uniform((maximum - minimum) + 1) + minimum;<br>\r\n}</code>\r\n    <hr>\r\n    <h2> Details </h2>\r\n    <ul>\r\n      <li>Swift is type-safe. It will infer variable types from the value assigned</li>\r\n      <ul>\r\n        <li>var x = 16 is an int.</li>\r\n        <li>var y = \"Hello\" is a string.</li>\r\n      </ul>\r\n      <li>Constants can be set with let.</li>\r\n      <ul>\r\n        <li>let c = 3.</li>\r\n        <li>c = 1 will cause an error</li>\r\n      </ul>\r\n      <li>Optionals</li>\r\n      <ul>\r\n        <li>Swift doesn't like nil.</li>\r\n        <li>So, we can use ? to make swift accept a nil value.</li>\r\n      </ul>\r\n    </ul>\r\n    <hr>\r\n    <h2> Functions </h2>\r\n    <ul>\r\n      <li>Swift functions are first-class types. This means that you can assign functions to variables, pass them as parameters to other functions, or make them return types.</li>\r\n      <li>Swift Functions can also return multiple values using tuples.</li>\r\n    </ul>\r\n    <hr>\r\n    <h2>Read-Eval-Print-Loop</h2>\r\n    <ul>\r\n      <li>Also known as the REPL</li>\r\n      <li>Accessible from terminal.</li>\r\n      <li>Interactive version of Swift for speedy testing and debugging.</li>\r\n      <li>Easiest place to run your code pre deployment</li>\r\n    </ul>\r\n\r\n  </body>\r\n</html>\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}